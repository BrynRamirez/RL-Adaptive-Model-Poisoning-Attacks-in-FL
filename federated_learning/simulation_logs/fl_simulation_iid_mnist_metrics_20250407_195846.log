2025-04-07 19:58:46 - INFO - Starting Federated Learning Simulation: dataset type: iid, dataset name: mnist, strategy: FedAvg(accept_failures=True), rounds: 10, clients: 20
2025-04-07 19:58:46 - WARNING - DEPRECATED FEATURE: flwr.simulation.start_simulation() is deprecated.
	Instead, use the `flwr run` CLI command to start a local simulation in your Flower app, as shown for example below:

		$ flwr new  # Create a new Flower app from a template

		$ flwr run  # Run the Flower app in Simulation Mode

	Using `start_simulation()` is deprecated.

            This is a deprecated feature. It will be removed
            entirely in future versions of Flower.
        
2025-04-07 19:58:46 - INFO - Starting Flower simulation, config: num_rounds=10, no round_timeout
2025-04-07 19:58:48 - INFO - Flower VCE: Ray initialized with resources: {'accelerator_type:G': 1.0, 'node:__internal_head__': 1.0, 'CPU': 24.0, 'object_store_memory': 6559688294.0, 'node:127.0.0.1': 1.0, 'memory': 13119376590.0, 'GPU': 1.0}
2025-04-07 19:58:48 - INFO - Optimize your simulation with Flower VCE: https://flower.ai/docs/framework/how-to-run-simulations.html
2025-04-07 19:58:48 - INFO - No `client_resources` specified. Using minimal resources for clients.
2025-04-07 19:58:48 - INFO - Flower VCE: Resources for each Virtual Client: {'num_cpus': 1, 'num_gpus': 0.0}
2025-04-07 19:58:48 - INFO - Flower VCE: Creating VirtualClientEngineActorPool with 24 actors
2025-04-07 19:58:48 - INFO - [INIT]
2025-04-07 19:58:48 - INFO - Requesting initial parameters from one random client
2025-04-07 19:58:52 - ERROR - Traceback (most recent call last):
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\flwr\simulation\ray_transport\ray_client_proxy.py", line 95, in _submit_job
    out_mssg, updated_context = self.actor_pool.get_client_result(
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\flwr\simulation\ray_transport\ray_actor.py", line 401, in get_client_result
    return self._fetch_future_result(cid)
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\flwr\simulation\ray_transport\ray_actor.py", line 282, in _fetch_future_result
    res_cid, out_mssg, updated_context = ray.get(
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\ray\_private\auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\ray\_private\client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\ray\_private\worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\ray\_private\worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=20736, ip=127.0.0.1, actor_id=e127303618fa513bc9c2c7d101000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x000001AF00CAB970>)
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\flwr\client\client_app.py", line 144, in __call__
    return self._call(message, context)
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\flwr\client\client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\flwr\client\message_handler\message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\flwr\client\client_app.py", line 72, in adaptor_fn
    return client_fn(str(cid))  # type: ignore
  File "C:\RL Adaptive Model Poisoning Attacks in FL\federated_learning\server.py", line 117, in client_fn
    return poisoned_client_fn(cid, dataset_type, dataset_name, is_malicious)
  File "C:\RL Adaptive Model Poisoning Attacks in FL\federated_learning\poisoned_client.py", line 117, in poisoned_client_fn
    return Poisoned_AdaptiveClient(
  File "C:\RL Adaptive Model Poisoning Attacks in FL\federated_learning\poisoned_client.py", line 18, in __init__
    train_loader, test_loader = load_dataset(self.dataset_type, self.dataset_name)
  File "C:\RL Adaptive Model Poisoning Attacks in FL\federated_learning\datasets\load_dataset.py", line 5, in load_dataset
    return get_iid_mnist_dataloader(num_clients, batch_size)
  File "C:\RL Adaptive Model Poisoning Attacks in FL\federated_learning\datasets\iid\mnist_loader.py", line 18, in get_iid_mnist_dataloader
    train_samples_per_client = len(train_dataset) // num_clients
TypeError: unsupported operand type(s) for //: 'int' and 'type'

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=20736, ip=127.0.0.1, actor_id=e127303618fa513bc9c2c7d101000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x000001AF00CAB970>)
  File "python\ray\_raylet.pyx", line 1890, in ray._raylet.execute_task
  File "python\ray\_raylet.pyx", line 1991, in ray._raylet.execute_task
  File "python\ray\_raylet.pyx", line 1896, in ray._raylet.execute_task
  File "python\ray\_raylet.pyx", line 1837, in ray._raylet.execute_task.function_executor
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\ray\_private\function_manager.py", line 691, in actor_method_executor
    return method(__ray_actor, *args, **kwargs)
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\ray\util\tracing\tracing_helper.py", line 467, in _resume_span
    return method(self, *_args, **_kwargs)
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\flwr\simulation\ray_transport\ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: unsupported operand type(s) for //: 'int' and 'type'

2025-04-07 19:58:52 - ERROR - [36mray::ClientAppActor.run()[39m (pid=20736, ip=127.0.0.1, actor_id=e127303618fa513bc9c2c7d101000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x000001AF00CAB970>)
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\flwr\client\client_app.py", line 144, in __call__
    return self._call(message, context)
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\flwr\client\client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\flwr\client\message_handler\message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\flwr\client\client_app.py", line 72, in adaptor_fn
    return client_fn(str(cid))  # type: ignore
  File "C:\RL Adaptive Model Poisoning Attacks in FL\federated_learning\server.py", line 117, in client_fn
    return poisoned_client_fn(cid, dataset_type, dataset_name, is_malicious)
  File "C:\RL Adaptive Model Poisoning Attacks in FL\federated_learning\poisoned_client.py", line 117, in poisoned_client_fn
    return Poisoned_AdaptiveClient(
  File "C:\RL Adaptive Model Poisoning Attacks in FL\federated_learning\poisoned_client.py", line 18, in __init__
    train_loader, test_loader = load_dataset(self.dataset_type, self.dataset_name)
  File "C:\RL Adaptive Model Poisoning Attacks in FL\federated_learning\datasets\load_dataset.py", line 5, in load_dataset
    return get_iid_mnist_dataloader(num_clients, batch_size)
  File "C:\RL Adaptive Model Poisoning Attacks in FL\federated_learning\datasets\iid\mnist_loader.py", line 18, in get_iid_mnist_dataloader
    train_samples_per_client = len(train_dataset) // num_clients
TypeError: unsupported operand type(s) for //: 'int' and 'type'

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=20736, ip=127.0.0.1, actor_id=e127303618fa513bc9c2c7d101000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x000001AF00CAB970>)
  File "python\ray\_raylet.pyx", line 1890, in ray._raylet.execute_task
  File "python\ray\_raylet.pyx", line 1991, in ray._raylet.execute_task
  File "python\ray\_raylet.pyx", line 1896, in ray._raylet.execute_task
  File "python\ray\_raylet.pyx", line 1837, in ray._raylet.execute_task.function_executor
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\ray\_private\function_manager.py", line 691, in actor_method_executor
    return method(__ray_actor, *args, **kwargs)
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\ray\util\tracing\tracing_helper.py", line 467, in _resume_span
    return method(self, *_args, **_kwargs)
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\flwr\simulation\ray_transport\ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: unsupported operand type(s) for //: 'int' and 'type'
2025-04-07 19:58:52 - ERROR - [36mray::ClientAppActor.run()[39m (pid=20736, ip=127.0.0.1, actor_id=e127303618fa513bc9c2c7d101000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x000001AF00CAB970>)
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\flwr\client\client_app.py", line 144, in __call__
    return self._call(message, context)
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\flwr\client\client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\flwr\client\message_handler\message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\flwr\client\client_app.py", line 72, in adaptor_fn
    return client_fn(str(cid))  # type: ignore
  File "C:\RL Adaptive Model Poisoning Attacks in FL\federated_learning\server.py", line 117, in client_fn
    return poisoned_client_fn(cid, dataset_type, dataset_name, is_malicious)
  File "C:\RL Adaptive Model Poisoning Attacks in FL\federated_learning\poisoned_client.py", line 117, in poisoned_client_fn
    return Poisoned_AdaptiveClient(
  File "C:\RL Adaptive Model Poisoning Attacks in FL\federated_learning\poisoned_client.py", line 18, in __init__
    train_loader, test_loader = load_dataset(self.dataset_type, self.dataset_name)
  File "C:\RL Adaptive Model Poisoning Attacks in FL\federated_learning\datasets\load_dataset.py", line 5, in load_dataset
    return get_iid_mnist_dataloader(num_clients, batch_size)
  File "C:\RL Adaptive Model Poisoning Attacks in FL\federated_learning\datasets\iid\mnist_loader.py", line 18, in get_iid_mnist_dataloader
    train_samples_per_client = len(train_dataset) // num_clients
TypeError: unsupported operand type(s) for //: 'int' and 'type'

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=20736, ip=127.0.0.1, actor_id=e127303618fa513bc9c2c7d101000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x000001AF00CAB970>)
  File "python\ray\_raylet.pyx", line 1890, in ray._raylet.execute_task
  File "python\ray\_raylet.pyx", line 1991, in ray._raylet.execute_task
  File "python\ray\_raylet.pyx", line 1896, in ray._raylet.execute_task
  File "python\ray\_raylet.pyx", line 1837, in ray._raylet.execute_task.function_executor
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\ray\_private\function_manager.py", line 691, in actor_method_executor
    return method(__ray_actor, *args, **kwargs)
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\ray\util\tracing\tracing_helper.py", line 467, in _resume_span
    return method(self, *_args, **_kwargs)
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\flwr\simulation\ray_transport\ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: unsupported operand type(s) for //: 'int' and 'type'
2025-04-07 19:58:52 - ERROR - Traceback (most recent call last):
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\flwr\simulation\legacy_app.py", line 361, in start_simulation
    hist = run_fl(
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\flwr\server\server.py", line 492, in run_fl
    hist, elapsed_time = server.fit(
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\flwr\server\server.py", line 93, in fit
    self.parameters = self._get_initial_parameters(server_round=0, timeout=timeout)
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\flwr\server\server.py", line 284, in _get_initial_parameters
    get_parameters_res = random_client.get_parameters(
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\flwr\simulation\ray_transport\ray_client_proxy.py", line 170, in get_parameters
    message_out = self._submit_job(message, timeout)
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\flwr\simulation\ray_transport\ray_client_proxy.py", line 109, in _submit_job
    raise ex
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\flwr\simulation\ray_transport\ray_client_proxy.py", line 95, in _submit_job
    out_mssg, updated_context = self.actor_pool.get_client_result(
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\flwr\simulation\ray_transport\ray_actor.py", line 401, in get_client_result
    return self._fetch_future_result(cid)
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\flwr\simulation\ray_transport\ray_actor.py", line 282, in _fetch_future_result
    res_cid, out_mssg, updated_context = ray.get(
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\ray\_private\auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\ray\_private\client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\ray\_private\worker.py", line 2639, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\ray\_private\worker.py", line 864, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=20736, ip=127.0.0.1, actor_id=e127303618fa513bc9c2c7d101000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x000001AF00CAB970>)
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\flwr\client\client_app.py", line 144, in __call__
    return self._call(message, context)
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\flwr\client\client_app.py", line 128, in ffn
    out_message = handle_legacy_message_from_msgtype(
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\flwr\client\message_handler\message_handler.py", line 96, in handle_legacy_message_from_msgtype
    client = client_fn(context)
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\flwr\client\client_app.py", line 72, in adaptor_fn
    return client_fn(str(cid))  # type: ignore
  File "C:\RL Adaptive Model Poisoning Attacks in FL\federated_learning\server.py", line 117, in client_fn
    return poisoned_client_fn(cid, dataset_type, dataset_name, is_malicious)
  File "C:\RL Adaptive Model Poisoning Attacks in FL\federated_learning\poisoned_client.py", line 117, in poisoned_client_fn
    return Poisoned_AdaptiveClient(
  File "C:\RL Adaptive Model Poisoning Attacks in FL\federated_learning\poisoned_client.py", line 18, in __init__
    train_loader, test_loader = load_dataset(self.dataset_type, self.dataset_name)
  File "C:\RL Adaptive Model Poisoning Attacks in FL\federated_learning\datasets\load_dataset.py", line 5, in load_dataset
    return get_iid_mnist_dataloader(num_clients, batch_size)
  File "C:\RL Adaptive Model Poisoning Attacks in FL\federated_learning\datasets\iid\mnist_loader.py", line 18, in get_iid_mnist_dataloader
    train_samples_per_client = len(train_dataset) // num_clients
TypeError: unsupported operand type(s) for //: 'int' and 'type'

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=20736, ip=127.0.0.1, actor_id=e127303618fa513bc9c2c7d101000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x000001AF00CAB970>)
  File "python\ray\_raylet.pyx", line 1890, in ray._raylet.execute_task
  File "python\ray\_raylet.pyx", line 1991, in ray._raylet.execute_task
  File "python\ray\_raylet.pyx", line 1896, in ray._raylet.execute_task
  File "python\ray\_raylet.pyx", line 1837, in ray._raylet.execute_task.function_executor
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\ray\_private\function_manager.py", line 691, in actor_method_executor
    return method(__ray_actor, *args, **kwargs)
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\ray\util\tracing\tracing_helper.py", line 467, in _resume_span
    return method(self, *_args, **_kwargs)
  File "C:\RL Adaptive Model Poisoning Attacks in FL\.venv\lib\site-packages\flwr\simulation\ray_transport\ray_actor.py", line 64, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: unsupported operand type(s) for //: 'int' and 'type'

2025-04-07 19:58:52 - ERROR - Your simulation crashed :(. This could be because of several reasons. The most common are: 
	 > Sometimes, issues in the simulation code itself can cause crashes. It's always a good idea to double-check your code for any potential bugs or inconsistencies that might be contributing to the problem. For example: 
		 - You might be using a class attribute in your clients that hasn't been defined.
		 - There could be an incorrect method call to a 3rd party library (e.g., PyTorch).
		 - The return types of methods in your clients/strategies might be incorrect.
	 > Your system couldn't fit a single VirtualClient: try lowering `client_resources`.
	 > All the actors in your pool crashed. This could be because: 
		 - You clients hit an out-of-memory (OOM) error and actors couldn't recover from it. Try launching your simulation with more generous `client_resources` setting (i.e. it seems {'num_cpus': 1, 'num_gpus': 0.0} is not enough for your run). Use fewer concurrent actors. 
		 - You were running a multi-node simulation and all worker nodes disconnected. The head node might still be alive but cannot accommodate any actor with resources: {'num_cpus': 1, 'num_gpus': 0.0}.
Take a look at the Flower simulation examples for guidance <https://flower.ai/docs/framework/how-to-run-simulations.html>.
